{"categories":[{"link":"/categories/homelab/","name":"Homelab","slug":"Homelab"},{"link":"/categories/networking/","name":"Networking","slug":"Networking"},{"link":"/categories/web-browser/","name":"Web Browser","slug":"Web Browser"}],"pages":[],"posts":[{"link":"/posts/unraid-install-nginx-proxy-manager/","text":"Nginx Proxy Manager (NPM) là một công cụ quản lý và cấu hình proxy ngược Nginx thông qua giao diện web thân thiện với người dùng. Công cụ này hỗ trợ nhiều tên miền, chứng chỉ HTTPS/SSL và tích hợp Let’s Encrypt tự động. giúp cấu hình Reverse Proxy, SSL, chuyển hướng (Redirect) và nhiều tính năng khác mà không cần chỉnh sửa file cấu hình Nginx thủ công.\nBài viết này mình sẽ chi tiết lại quá trình mà bản thân mình cài đặt NPM trên unRAID với PostgreSQL thay vì sử dụng SQLite mặc định mà NPM cung cấp.\n🌱 Yêu Cầu Cloudflare DDNS cho unRAID Server\rCài đặt PostgreSQL\r🗄️ Tạo database cho NPM Xem hướng dẫn tạo database tại bài viết: Cài đặt PostgreSQL\rBASH\rThu gọn\rSao chép\r# psql -d postgres -U postgres -W Password: psql (16.9 (Debian 16.9-1.pgdg120+1)) Type \u0026#34;help\u0026#34; for help. postgres=# create database npm; CREATE DATABASE postgres=# create user npm with encrypted password \u0026#39;npmpd\u0026#39;; CREATE ROLE postgres=# grant connect on database npm to npm; GRANT postgres=# alter database npm owner to npm; ALTER DATABASE\rNhấp để mở rộng và xem thêm\rNhư vậy mình đã tạo xong database cho NPM với các thông tin:\nDB Name: npm DB User: npm DB Pass: npmpd 📄 Tạo .env để chứa thông tin Database Mình không muốn các thông tin về database xuất hiện trong Container Web UI của unRAID nên mình sẽ đưa nó vào .env file\nBASH\rThu gọn\rSao chép\rhiepchau@unRAID: mkdir -p /mnt/user/appdata/npm hiepchau@unRAID: nano -p /mnt/user/appdata/npm/.env\rNhấp để mở rộng và xem thêm\r.env\rThu gọn\rSao chép\rDB_POSTGRES_HOST=localhost # Thay bằng địa chỉ IP của NAS DB_POSTGRES_PORT=5432 DB_POSTGRES_NAME=npm DB_POSTGRES_USER=npm DB_POSTGRES_PASSWORD=npmpd\rNhấp để mở rộng và xem thêm\r🐧 Cài đặt NPM trên unRAID Đăng nhập vào unRAID Dashboard Truy cập vào Apps Tìm Nginx Proxy Manager trên thanh tìm kiếm Install → OK → Chuyển Advanced View Chỉnh cấu hình Container Apply → Hệ thống tự động pull data và deploy app Quan trọng\r.env file\nXML\rThu gọn\rSao chép\rExtra Parameters: --env-file /mnt/user/appdata/npm/.env\rNhấp để mở rộng và xem thêm\rVì unRAID Dashboard đã sử dụng cổng 80 cho WebUI, nếu cấu hình container cũng dùng cổng này, ứng dụng sẽ không thể khởi động. Để giải quyết vấn đề xung đột cổng, tôi đã thiết lập lại toàn bộ các cổng bằng cách thêm tiền tố 18 vào trước.\nWeb UI Port: 81 → 1881\nHTTP Port: 80 → 1880\nHTTPs Port: 443 → 18443\n🔑 Mở port 443/80 cho NPM Để hoạt động, NPM yêu cầu mở cổng 80 (HTTP) và 443 (HTTPs). Đây là hai cổng chuẩn được dùng để xử lý các yêu cầu web từ bên ngoài, cho phép NPM làm nhiệm vụ reverse proxy.\nCổng 80 (HTTP): NPM sử dụng cổng này để nhận các yêu cầu truy cập web thông thường.\nCổng 443 (HTTPs): Đây là cổng quan trọng nhất, vì NPM dùng nó để:\nNhận các yêu cầu bảo mật.\nTự động cấp và gia hạn chứng chỉ SSL/TLS miễn phí từ Let\u0026rsquo;s Encrypt cho các domain.\nĐăng nhập vào Mikrotik thông qua Winbox IP → Firewall → NAT → Add New NAT Rule YAML\rThu gọn\rSao chép\rChain: dstnat Dst. Address List: WAN-IP # Danh sách WAN IP Protocol: 6(tcp) Dst. Port: 443 Action: dst-nat To Address: 192.168.10.10 # IP của NAS To Ports: 18443 # Port 18443 của container\rNhấp để mở rộng và xem thêm\rLưu ý\rLàm tương tự để mở Port 80\n🌐 Truy cập giao diện quản lý Mở trình duyệt web và truy cập\nHTML\rThu gọn\rSao chép\rhttps://\u0026lt;ip_nas\u0026gt;:1881\rNhấp để mở rộng và xem thêm\rTài khoản mặc định:\nEmail: admin@example.com Password: changeme ⚠️ Đăng nhập và đổi mật khẩu ngay sau lần đăng nhập đầu tiên.\n🔀 Cấu Hình Reverse Proxy Sau khi đăng nhập và đổi mật khẩu xong. Chúng ta tiến hành tạo Reverse Proxy. Dưới đây Hiệp sẽ tạo 1 Reverse Proxy cho dịch vụ NPM.\nNPM Dashboard → Proxy Hosts → Add Proxy Host. Tại tab Details Domain name: test1.hiepchau.net Schema: HTTP Foward Hostname / IP: 192.168.10.10 Foward Port: 1881 🗸 Block Common Exploits Tại tab SSL SSL Certificate: Request a new SSL Certificate 🗸 Force SSL Email Address: your_email@gmail.com 🗸 Agree terms Bấm Save Sau khi tạo thành công thì bạn đã có thể truy cập vào NPM Dasboard bằng domain https://test1.hiepchau.net\r.\n✅ Kết Luận Qua quá trình cài đặt chi tiết đã được trình bày, ta thấy rằng việc triển khai Nginx Proxy Manager trên unRAID không chỉ là một giải pháp kỹ thuật hiệu quả mà còn mang lại nhiều lợi ích thiết thực.\nVới NPM, việc quản lý các dịch vụ web được đơn giản hóa tối đa, đồng thời tăng cường lớp bảo mật bằng cách tự động hóa quy trình cấp và gia hạn chứng chỉ SSL/TLS. Điều này giúp hệ thống của bạn hoạt động ổn định, an toàn và dễ dàng truy cập thông qua các tên miền, thay thế cho việc sử dụng địa chỉ IP và các cổng phức tạp, nâng cao trải nghiệm sử dụng.\n","title":"unRAID Server: Cài đặt Nginx Proxy Manager"},{"link":"/posts/turn-on-ublock-origin/","text":"Sáng nay vào văn phòng công ty thấy Google Chrome của mình tự động update lên version 138.0.7204.169. Hàng loạt website mình truy cập hằng ngày tràn ngập trong quảng cáo. Truy cập vô Extensions Manager thì thấy 2 extensions mình dùng để chặn quảng cáo là uBlock Origin và Violent Monkey đã tự động disable (do chạy ở MV2) và không bật lên lại được nữa - đánh dấu bước chuyển đổi sang Manifest V3 (MV3).\nLƯU Ý\rViệc mở lại MV2 trên Google Chrome là không khuyến khích\nViệc bạn làm theo hướng dẫn của mình dưới đây là đã hiểu rõ các nguy cơ rủi ro có thể xảy ra.\nDO WITH YOUR OWN RISK.\nMở lại MV2 trên Google Chrome Ngồi lướt r/uBlockOrigin\rthì thấy có hướng dẫn cập nhật trong chrome://flags để bật lại tính năng MV2. Điều này có thể giúp duy trì hiệu quả chặn quảng cáo của uBlock Origin trên Chrome, ít nhất là trong thời gian cho đến khi Chrome ngừng hổ trợ hẳn.\nMở trình duyệt Chrome vào truy cập chrome://flags Search flags → M137 Enable: Temporarily unexpire M137 flags Khởi động lại Chrome Truy cập lại chrome://flags Search flags → MV2 Disable: Extension Manifest V2 Deprecation Warning Stag Disable: Extension Manifest V2 Deprecation Disabled Stage Disable: Extension Manifest V2 Deprecation Unsupported Stage Enabled: Allow legacy extension manifest versions Khởi động lại Chrome Cài đặt lại Extensions uBlock Origin và Violent Monkey Kết luận Việc bật lại hỗ trợ MV2 như trên chỉ là một giải pháp tạm thời cho đến khi Chrome chính thức loại bỏ hoàn toàn MV2 khỏi hệ thống và phải chấp nhận đổi sang web browser khác có hổ trợ MV2 hoặc sử dụng các extension hạn chế hơn. uBlock Origin LITE chẳn hạn.\nTham khảo r/uBlockOrigin - hide warnings/prevent disabling with chrome flags (until June)\r","title":"Bật lại uBlock Origin trên Google Chrome mới"},{"link":"/posts/unraid-install-postgresql/","text":"PostgreSQL là nền tảng quản trị cơ sở dữ liệu trên unRAID Server của mình. Chúng không chỉ đảm bảo sự ổn định cho các dự án cá nhân như NPM, Vaultwarden, Umami, v.v., mà còn là xương sống cho mọi hoạt động dữ liệu của mình.\nTại sao lại chọn PostgreSQL ? Thật ra, bản thân mình không hiểu rõ lắm về SQL (như PostgreSQL hay MariaDB). Tuy nhiên, nhiều phần mềm mình tự host lại yêu cầu những hệ quản trị cơ sở dữ liệu này, dù một số có thể chạy trên SQLite. Ban đầu, việc dùng SQLite có vẻ tiện lợi vì mỗi phần mềm tự tạo ra một file cơ sở dữ liệu riêng. Nhưng mình nhận ra vấn đề là cứ mỗi 1 app nó lại tạo ra 1 SQLite riêng. Mặc dù chả ảnh hưởng gì nhưng thôi gom lại 1 rổ cho tiện.\nAh, còn lý do tại sao lại chọn PostgreSQL thì đơn giản lắm. Vì hiện tại Immich (thay thế choGoogle Photos) chỉ hổ trợ PostgreSQL 😅.\nCài đặt PostgreSQL trên unRAID Trong nội dung bài viết này, mình sẽ hướng dẫn các bạn cài đặt PostgreSQL16 đã có sẵn template trên unRAID Community Applications (CA).\nĐăng nhập vào unRAID Dashboard\nTruy cập vào Apps\nTìm PostgreSQL16 trên thanh tìm kiếm\nInstall → Ok\nChỉnh cấu hình Container\nVariable: POSTGRES_USER: \u0026quot;\u0026quot; Variable: POSTGRES_DB: \u0026quot;\u0026quot; 2 mục này mình để trống để app tự khởi tạo user / database mặc định.\nSau này khi chạy app có yêu cầu database. Mình sẽ khởi tạo cụ thể user / database sau. Apply → Hệ thống tự động pull data và deploy app cho bạn Login và khởi tạo database Trước tiên, mình truy cập vào console của docker postgresql vừa tạo.\nunRAID Dashboard Truy cập vào Docker Chuột phải vào icon postgresql16 Console Login vào database BASH\rThu gọn\rSao chép\r# psql -d postgres -U postgres -W Password: psql (16.9 (Debian 16.9-1.pgdg120+1)) Type \u0026#34;help\u0026#34; for help. postgres=#\rNhấp để mở rộng và xem thêm\rKhởi tạo database BASH\rThu gọn\rSao chép\rpostgres=# create database test; CREATE DATABASE postgres=# create user testid with encrypted password \u0026#39;testpd\u0026#39;; CREATE ROLE postgres=# grant connect on database test to testid; GRANT postgres=# alter database test owner to testid; ALTER DATABASE\rNhấp để mở rộng và xem thêm\rKết luận Cài đặt PostgreSQL trên unRAID khá dễ dàng nhờ có sẵn template. Chỉ việc điền vài thông tin cơ bản là có ngay một Docker container chạy PostgreSQL ổn định.\nTừ cơ bản này, mình đã tạo ra các database để chạy các app như Vaultwardent (quản lý mật khẩu), Nginx Proxy Manager (quản lý reverse proxy), Umami Analytics (Phân tích blog này của mình), \u0026hellip; Toàn bộ database đều gom về 1 mối thay vì mỗi file sqlite riêng biệt trong từng folder /appdata/app_services\nMình sẽ lên bài hướng dẫn cụ thể từng app sau. Hẹn các bạn trong bài viết tới.\nHappy building !\n","title":"unRAID Server: Cài đặt PostgreSQL"},{"link":"/posts/cloudflare-ddns/","text":"IP động, hầu hết gói cước Internet gia đình đều thuộc dạng này. Có nghĩa là, IP thay đổi bất cứ lúc nào, thời điểm nào, như cái cách mà vợ bạn giận bạn vậy. 😱\nIP thay đổi một cách chóng mặt như vậy thì việc kết nối tới unRAID server trở nên rất khó khăn. Mà cho dù bạn có IP tĩnh thì việc nhớ dãy IP của mình theo dạng dãy số 101.101.97.255 cũng là điều không thể. Quỹ đen mình còn không nhớ có bao nhiêu nữa nói chi cái dãy IP này.\nThế nên chúng ta cần tới giải pháp DDNS (Dynamic DNS). Ở trong nội dung bài viết này, mình sẽ hướng dẫn các bạn chạy Cloudflare-DDNS trên docker để tự động cập nhật IP động của mình thành DNS Tĩnh\nChuẩn bị Tài khoản Cloudflare\rDomain đã được chuyển về Cloudflare quản lý Tạo Cloudflare API Token Container cloudflare-ddns sẽ sử dụng Token API tùy chỉnh để gửi IP đã cập nhật đến tài khoản Cloudflare của bạn. Vậy nên chúng ta cần tạo Cloudflare API Token trước tiên\nTruy cập Cloudflare API\rCreate Token → Custom token (End of Page) → Get started Fill in the information Token name: cloudflare-ddns Permission: Zone | DNS | Edit Zone Resource: Include | All zones from an account | Chọn domain của bạn Continue to summary Create Token Copy token và lưu tạm vào đâu đó. Lưu ý là API Token này sẽ không hiện lại LẦN THỨ 2. Cài đặt cloudflare-ddns Mình sử dụng docker image onzu/cloudflare-ddns\rmặc dù đã ngưng phát triển nhưng vẫn hoạt động tốt.\nDocker compose Tạo thư mục để lưu file docker-compose.yaml\nBASH\rThu gọn\rSao chép\rmkdir ~/cloudflare-ddns cd cloudflare-ddns nano docker-compose.yaml\rNhấp để mở rộng và xem thêm\rNội dung trong file docker-compose như bên dưới\ndocker-compose.yaml\rThu gọn\rSao chép\rversion: \u0026#39;2\u0026#39; services: cloudflare-ddns: image: oznu/cloudflare-ddns:latest restart: always environment: - API_KEY=xxxxxxx #các bạn điền API Token vào đây - ZONE=example.com #domain của bạn - SUBDOMAIN=subdomain #subdomain nếu bạn muốn - PROXIED=true\rNhấp để mở rộng và xem thêm\rChạy lệnh để khởi tạo container\nBASH\rThu gọn\rSao chép\rdocker-compose up -d\rNhấp để mở rộng và xem thêm\runRAID UI Truy cập unRAID Dashboard → APPS → cloudflare ddns\nChọn App → Install\nThiết lập các variable của container → Apply để deploy Sau khi container hoạt động, hãy kiểm tra tài khoản Cloudflare để xem Bản ghi A đã được thêm vào tên miền bạn chỉ định với IP bên ngoài hay chưa.\nKết luận Vậy là xong, cứ mỗi 15 phút ứng dụng tự động kiểm tra IP Động của bạn và cập nhật IP mới nhất lên Cloudflare. Bây giờ thay vì phải nhớ địa chỉ IPv4 dài ngoằn hoặc phải kiểm tra lại IP nếu nó thay đổi thì mình chỉ cần nhớ mỗi domain test.hiepchau.net là xong.\nChúc bạn thành công !\n","title":"Cập nhật IP động bằng Cloudflare DDNS"},{"link":"/posts/my-homelab-in-august-2025/","text":"Nếu đã từng theo dõi blog của Hiệp (ờm, blog cũ những năm trước đó), chắc hẳn các bạn đã biết mình đã chia sẻ khá nhiều về Debian (L1 Pro) hoặc là XPEnology (NAS Fake J1900). Cũng vì một số lý do cá nhân mà mình phải đóng các blog cũ đã xây dựng và cho đến bây giờ thì mình mới quay trở lại.\nThế nên mình cũng viết lại 1 bài blog để nói về Homelab/NAS hiện tại mình đang sử dụng, cấu hình ra sao, sử dụng HĐH gì, lý do tại sao lại chọn như vậy ? Cũng như chia sẻ các dịch vụ self-host mà mình cài đặt cho đến các nâng cấp trong tương lai.\n🖥️ Phần cứng Sau qua những lần nâng cấp thì hiện tại Hiệp đang sử dụng HP 800 G4 SFF Form với I5-8500 (Gen 8, Coffee Lake, 6C/6T) xử lý ổn định, hỗ trợ iGPU UHD630 giúp transcode video 4K khoảng 2-3 luồng rất phù hợp với nhu cầu hiện tại của mình.\nTên Số lượng Case HP 800 G4 SFF 1 CPU I5-8500 1 RAM Hynix 16GB 2666MHz 2 SSD Samsung 981a 256GB 1 HDD WD Red 4TB 2 🧑‍💻 unRAID OS Trong suốt hành trình trải nghiệm setup homelab của mình, mình đã thử nghiệm qua nhiều hệ điều hành (OS) khác nhau. Mỗi cái đều có cái thú riêng, nhưng đối với Homelab hiện tại thì mình đang sử dụng unRAID Server. Có một số lý do cơ bản mình chọn nó là vì\nWEB-UI: trực quan, thân thiện, dễ quản lý\nStorage: Cho phép dùng nhiều ổ cứng dung lượng khác nhau để tạo một mảng lưu trữ duy nhất.\nKết hợp ổ 1TB, 2TB, 3TB để có tổng dung lượng 6TB, Backup dữ liệu: Gán ổ 3TB vào Parity Docker: giao diện trực quan, không phải kiểm soát bằng Cli hay Docker-compose.\n📦 Các dịch vụ Self-hosted đang chạy Một trong những lý do khiến mình thích unRAID chính là kho ứng dụng Docker đã thiết lập sẵn Template với giao diện WebUI thân thiện nên rất dễ triển khai. Dưới đây là 1 số dịch vụ mà mình đang triển khai.\n🛡️ Networking \u0026amp; Proxy Nginx Proxy Manager – reverse proxy, SSL cho các dịch vụ nội bộ. Cloudflare DDNS – cập nhật IP động về Cloudflare. 📂 File \u0026amp; Storage File Browser – giao diện web quản lý file trực tiếp trên server. OpenList – index và public cloud storage (Google Drive, 115, v.v). 📥 Download \u0026amp; Torrent qBittorrent – client torrent mạnh mẽ, có web UI. 📊 Giám sát \u0026amp; Phân tích Umami Analytics – phân tích truy cập website, thay thế Google Analytics. Uptime Kuma – monitor uptime dịch vụ, gửi cảnh báo khi down. Diun (Docker Image Update Notifier) – thông báo khi có bản update mới cho container. 🎬 Media \u0026amp; Photos Plex Media Server – lưu trữ và stream phim/nhạc. Arr Apps (Sonarr, Radarr, Lidarr…) – tự động quản lý, tải và sắp xếp media. Immich – self-hosted Google Photos thay thế, quản lý hình ảnh \u0026amp; video. 🗄️ Database Backend PostgreSQL – cơ sở dữ liệu chính cho nhiều app. Redis – cache và session cho ứng dụng. 🔐 Bảo mật \u0026amp; Quản lý Vaultwarden – self-hosted Bitwarden, quản lý mật khẩu. 💳 Tiện ích khác Wallos – quản lý subscription (Netflix, Spotify, v.v). Kutt – rút gọn URL, thay thế Bitly. 📌 Kết luận Vậy là mình đã điểm lại toàn bộ Homelab hiện tại – từ phần cứng, hệ điều hành unRAID cho đến các dịch vụ self-hosted đang chạy hằng ngày. Với mình, Homelab không chỉ là nơi lưu trữ dữ liệu, giải trí mà còn là một “phòng thí nghiệm” nhỏ để thử nghiệm công nghệ, học hỏi và tối ưu dần theo nhu cầu.\nTrong tương lai, mình sẽ tiếp tục nâng cấp phần cứng, tối ưu cấu hình cũng như thử nghiệm thêm nhiều ứng dụng mới. Nếu bạn cũng quan tâm đến Homelab hoặc đang tìm hiểu về unRAID, hy vọng bài viết này sẽ giúp bạn có thêm ý tưởng để bắt đầu hoặc mở rộng hệ thống của riêng mình.\n💬 Nếu bạn có thắc mắc hoặc muốn chia sẻ kinh nghiệm, hãy để lại bình luận nhé. Chúng ta có thể trao đổi thêm và biết đâu học hỏi lẫn nhau.\n","title":"unRAID Server: Cập nhật tháng 8.2025"},{"link":"/posts/wireguard-vpn-tunnel/","text":"Bạn muốn truy cập NAS ở nhà từ công ty một cách an toàn mà không cần mở port 22, tránh nguy cơ tấn công brute-force. Với Mikrotik hAP ac² chạy RouterOS v7 có tích hợp WireGuard, bạn có thể dễ dàng thiết lập một kết nối VPN bảo mật. Điều này cho phép bạn SSH vào NAS an toàn mọi lúc mọi nơi, tăng cường bảo mật cho mạng gia đình của bạn.\nYêu cầu Mikrotik: Router OS Ver 7. IP Tĩnh hoặc DDNS Client: đã cài WireGuard Client\rCác vấn đề liên quan đến cấu hình PPPoE / DHCP của Mikrotik không nằm trong bài viết này.\nThiết lập WireGuard trên Mikrotik và Client Bước 1: Tạo Interface WireGuard trên Mikrotik Mở winbox và login vào Mikrotik.\nWireGuard → Add new Interface Name: wireguard1 Listen Port: 13231 Mẹo\rCác bạn có thể đổi Name/Port nếu muốn\nBước 2: Tạo IP Address cho WireGuard Sau khi tạo xong interface, mình tiến hành tạo 1 Address List riêng cho interface đó để tiện quản lý.\nVào tab IP → Address → Add new Adress và điền các thông số.\nYAML\rThu gọn\rSao chép\rAddress: 25.25.25.1/24 Network: 25.25.25.0 Interface: wireguard1\rNhấp để mở rộng và xem thêm\rBước 3: Lấy Public Key trên Client WireGuard trên PC → Add Tunnel → Add empty tunnel.\nSau đó đặt tên cho tunnel và copy Public Key.\nBước 4: Tạo Peer để truy cập vào WireGuard Server trên Client Lấy được Public Key rồi ta quay trở lại WinBox.\nWireGuard → Peer → Add new Peer và dán Public Key đã copy ở trên vào. Gán luôn IP cho kết nối này\nBước 5: Cấu hình WireGuard trên Client Sau khi tạo Peer xong, quay lại tab WireGuard interface và copy Public Key của Interface.\nTiếp đó quay lại PC, copy sample config bên dưới và hiệu chỉnh lại cho phù hợp với cấu hình của mình.\nwireguard.conf\rThu gọn\rSao chép\r[Interface] PrivateKey = kPnywjIUK8xysYCZWYPg7OZXfJLO/1qjUBR6qs8sVkk= Address = 25.25.25.2/32 # Allowed Address đã cấu hình ở Bước 4 DNS = 8.8.8.8 [Peer] PublicKey = P4KPCop/66Qtw+EShxVyoefuUYC0zxfNx7h4y+AanBo= #Public Key mình nói copy ở vừa nãy AllowedIPs = 0.0.0.0/0 # Để chấp nhận tất cả IP kết nối () Endpoint = hiepchau.net:13231 PersistentKeepalive = 10\rNhấp để mở rộng và xem thêm\rBước 6: NAT Port 13231 trên Winbox Trở lại Winbox → IP → Firewall → Filter Rules → Add new Rule\nYAML\rThu gọn\rSao chép\rChain: input Protocol: udp Dst. Port: 13231 In. Interface: all ppp Action: accept\rNhấp để mở rộng và xem thêm\rThận trọng\rKéo rule vừa tạo lên đầu danh sách NAT (nằm dưới rule pppoe)\nBước 7: NAT masquerade để truy cập mạng LAN nội bộ Ở bước 6, chuyển qua Tab IP → Firewall → NAT → Create new NAT Rule\nYAML\rThu gọn\rSao chép\rChain: srcnat Src. Address: 25.25.25.1/24 # IP Address List ở Bước 2 Action: masquerade\rNhấp để mở rộng và xem thêm\rKết quả Vậy là xong rồi đó !\nChúc bạn thiết lập Wireguard VPN để kết nối về mạng LAN nội bộ thành công !\n","title":"Hướng dẫn thiết lập Wireguard trên Mikrotik"}],"tags":[{"link":"/tags/chrome/","name":"Chrome","slug":"Chrome"},{"link":"/tags/cloudflare/","name":"Cloudflare","slug":"Cloudflare"},{"link":"/tags/database/","name":"Database","slug":"Database"},{"link":"/tags/ddns/","name":"DDNS","slug":"DDNS"},{"link":"/tags/mikrotik/","name":"Mikrotik","slug":"Mikrotik"},{"link":"/tags/mv2/","name":"MV2","slug":"MV2"},{"link":"/tags/mv3/","name":"MV3","slug":"MV3"},{"link":"/tags/nas/","name":"NAS","slug":"NAS"},{"link":"/tags/postgresql/","name":"PostgreSQL","slug":"PostgreSQL"},{"link":"/tags/reverse-proxy/","name":"Reverse-Proxy","slug":"Reverse-Proxy"},{"link":"/tags/self-hosted/","name":"Self-Hosted","slug":"Self-Hosted"},{"link":"/tags/ublock-origin/","name":"UBlock Origin","slug":"UBlock Origin"},{"link":"/tags/unraid/","name":"UnRAID","slug":"UnRAID"},{"link":"/tags/vpn/","name":"VPN","slug":"VPN"}]}